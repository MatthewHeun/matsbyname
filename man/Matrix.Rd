% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities_Matrix.R
\name{Matrix}
\alias{Matrix}
\title{Create a Matrix amenable to use in the \code{matsbyname} package}
\usage{
Matrix(
  data = NA,
  nrow = 1,
  ncol = 1,
  byrow = FALSE,
  dimnames = NULL,
  sparse = NULL,
  doDiag = FALSE,
  forceCheck = FALSE
)
}
\arguments{
\item{data}{An optional numeric data vector or matrix.}

\item{nrow}{When data is not a matrix, the desired number of rows.
Default is \code{1}.}

\item{ncol}{When data is not a matrix, the desired number of columns.
Default is \code{1}.}

\item{byrow}{A boolean. If \code{FALSE} (the default) the matrix is filled by columns, otherwise the matrix is filled by rows.}

\item{dimnames}{A dimnames attribute for the matrix: a list of two character components. They are set if not NULL (as per default).}

\item{sparse}{A boolean or \code{NULL}. Specifies whether the result should be sparse or not.
By default (\code{NULL}), the Matrix is made sparse when more than half
of the entries are \code{0}.}

\item{doDiag}{A boolean indicating if a \code{diagonalMatrix} object should be returned
when the resulting matrix is diagonal (mathematically).
Default is \code{FALSE}, which is different from \code{Matrix::Matrix()}.}

\item{forceCheck}{A boolean indicating if the checks for structure should happen
when \code{data} is already a \code{Matrix} object.
Default is \code{FALSE}.}
}
\value{
A \code{Matrix} object.
}
\description{
The \code{matsbyname} package uses \code{Matrix} objects for its
default data representation, taking advantage
of the sparse matrix capabilities of \code{Matrix} compared
to the base \code{matrix} class.
This function routes to \code{Matrix::Matrix()}, with some important
differences. See details.
}
\details{
This function NEVER creates a symmetric matrix,
because symmetric matrices do not respect some future changes to \code{dimnames},
which can cause information loss in the \code{matsbyname} context.
A non-symmetric \code{Matrix} is assured by calling \code{as(out, "generalMatrix")}
on the outgoing \code{Matrix} object.

This function has different defaults compared to \code{Matrix::Matrix()}, including\if{html}{\out{
<ul>
<li> Here, the default for `doDiag` is `FALSE`,
     while the default for `doDiag` is `TRUE` for `Matrix::Matrix()`.
<li> When `dimnames = NULL` (the default), `dimnames = NULL` is the result, 
     to maintain compatibility with `matrix()`.
     `Matrix::Matrix()` sets `dimnames = list(NULL, NULL)`.
</ul>
}}
}
\examples{
# matsbyname::Matrix() will not create a Matrix with a symmetric subclass ...
matsbyname::Matrix(c(1, 0, 2, 
                     0, 0, 0, 
                     2, 0, 0), byrow = TRUE, nrow = 3, ncol = 3)
# ... but Matrix::Matrix will create a symmetric matrix.
Matrix::Matrix(c(1, 0, 2, 
                 0, 0, 0, 
                 2, 0, 0), byrow = TRUE, nrow = 3, ncol = 3)
# matsbyname::Matrix() will not create a diagonal matrix ...
matsbyname::Matrix(c(1, 0, 
                     0, 1), byrow = TRUE, nrow = 2, ncol = 2)
# ... but Matrix::Matrix will create a diagonal matrix.
Matrix::Matrix(c(1, 0, 
                 0, 1), byrow = TRUE, nrow = 2, ncol = 2)
}
